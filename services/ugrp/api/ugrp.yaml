swagger: "2.0"
info:
  title: "UGRP API"
  description: |
    Provides functionality for updating, deleting and fetching Users and creating, updating, deleting and fetching Groups. 
    All the APIs require a valid session token for authentication.
    ### Users:
      #### Get:
      Fetches Users by user Id or token or lists users by search criteria. In case of get user by user Id or token, the details of the corresponding user are returned.
      In case of list, a paginated list of users satisfying the search/filter critera is returned. The output fields returned are according to theose specified in the
      configuration.

  version: "1.0.0"
host: 'key-local-api.example.com'
schemes:
  - https
produces:
  - application/json
consumes:
  - application/json
paths:
  "/user/v1/get":
    post:
      parameters:
        - name: Authorization
          in: headers
          required: true
          type: string
        - name: userData
          in: body
          schema:
            type: object
      responses:
        "200":
          description: "Ok"
          schema:
            $ref: "#/definitions/Output"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
      security:
        - jwt.secured: []
  "/user/v1/update":
    put:
      parameters:
        - name: Authorization
          in: headers
          required: true
          type: string
        - name: updateUser
          in: body
          required: true
          schema:
            $ref: "#/definitions/updateUser"
      responses:
        "200":
          description: "Ok"
          schema:
            $ref: "#/definitions/Output"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
      security:
        - jwt.secured: []
  "/user/v1/delete":
    delete:
      parameters:
        - name: Authorization
          in: headers
          required: true
          type: string
        - name: deleteUser
          in: body
          required: true
          schema:
            type: object
            required:
              - userId
            properties:
              userId:
                type: string
      responses:
        "200":
          description: "Ok"
          schema:
            $ref: "#/definitions/Output"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
      security:
        - jwt.secured: []
  "/group/v1/create":
    post:
      parameters:
        - name: Authorization
          in: headers
          required: true
          type: string
        - name: createGroup
          in: body
          required: true
          schema:
            $ref: "#/definitions/createGroup"
      responses:
        "200":
          description: "Ok"
          schema:
            $ref: "#/definitions/Output"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
      security:
        - jwt.secured: []
  "/group/v1/get":
    post:
      parameters:
        - name: Authorization
          in: headers
          required: true
          type: string
      responses:
        "200":
          description: "Ok"
          schema:
            $ref: "#/definitions/Output"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
      security:
        - jwt.secured: []
  "/group/v1/update":
    put:
      parameters:
        - name: Authorization
          in: headers
          required: true
          type: string
      responses:
        "200":
          description: "Ok"
          schema:
            $ref: "#/definitions/Output"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
      security:
        - jwt.secured: []
  "/group/v1/delete":
    delete:
      parameters:
        - name: Authorization
          in: headers
          required: true
          type: string
        - name: deleteGroup
          in: body
          required: true
          schema:
            $ref: "#/definitions/deleteGroup"
      responses:
        "200":
          description: "Ok"
          schema:
            $ref: "#/definitions/Output"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
      security:
        - jwt.secured: [] 
securityDefinitions:
  jwt.secured:
    type: apiKey
    name: Authorization
    in: header
definitions:
  Message:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: "The message code for the operation status."
      msg:
        type: string
        description: "The message for the operation status."
  Output:
    type: object
    properties:
      success:
        type: string
        format: boolean
        description: Tell's whether action is performed succesfully or not
      message:
        $ref: '#/definitions/Message'
  Error:
    properties:
      code:
        description: "Error Code"
        format: int32
        type: integer
      message:
        description: "Error message"
        type: string
  updateUser:
    type: object
    properties:
      userId:
        type: integer
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      avatar:
        type: string
      contactNumber:
        type: string
      address:
        type: string
      gender:
        type: string
      birthDate:
        type: string
      facebookId:
        type: string
      linkedInId:
        type: string
      googleId:
        type: string
  createGroup:
    type: object
    properties:
      userIds:
        type: array
        items:
          type: integer
      description:
        type: string
      name:
        type: string
  deleteGroup:
    type: object
    properties:
      deptId:
        type: integer