swagger: "2.0"
info:
  title: "User API"
  version: "1.0.0"
host: 'key-local-api.example.com'
basePath: /user
schemes:
  - https
produces:
  - application/json
consumes:
  - application/json
paths:
  "/v1/get":
    post:
      parameters:
        - name: Authorization
          in: headers
          required: true
          type: string
        - name: userData
          in: body
          schema:
            type: object
      responses:
        "200":
          description: "Ok"
          schema:
            $ref: "#/definitions/Output"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
      security:
        - jwt.secured: []
  "/v1/update":
    put:
      parameters:
        - name: Authorization
          in: headers
          required: true
          type: string
        - name: updateUser
          in: body
          required: true
          schema:
            $ref: "#/definitions/updateUser"
      responses:
        "200":
          description: "Ok"
          schema:
            $ref: "#/definitions/Output"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
      security:
        - jwt.secured: []
  "/v1/delete":
    delete:
      parameters:
        - name: Authorization
          in: headers
          required: true
          type: string
        - name: deleteUser
          in: body
          required: true
          schema:
            type: object
            required:
              - userId
            properties:
              userId:
                type: string
      responses:
        "200":
          description: "Ok"
          schema:
            $ref: "#/definitions/Output"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
      security:
        - jwt.secured: []
securityDefinitions:
  jwt.secured:
    type: apiKey
    name: Authorization
    in: header
definitions:
  Message:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: "The message code for the operation status."
      msg:
        type: string
        description: "The message for the operation status."
  Output:
    type: object
    properties:
      success:
        type: string
        format: boolean
        description: Tell's whether action is performed succesfully or not
      message:
        $ref: '#/definitions/Message'
  Error:
    properties:
      code:
        description: "Error Code"
        format: int32
        type: integer
      message:
        description: "Error message"
        type: string
  updateUser:
    type: object
    properties:
      userId:
        type: string
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      avatar:
        type: string
      contactNumber:
        type: string
      companyName:
        type: string
      address:
        type: string
      gender:
        type: string
      birthDate:
        type: string
      facebookId:
        type: string