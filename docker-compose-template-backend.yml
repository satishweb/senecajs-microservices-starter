version: '2'
services:
  queue: 
    image: rabbitmq:${RABBITMQVERSION}
    container_name: ${PROJECTKEY}-${SYSENV}-queue
    ports:
      - 15672:15672
    environment:
      - DEBUG=${DEBUG}
    restart: 'on-failure:50'
    # Had to switch to bridge due to docker on mac issues.
    network_mode: "bridge"

#   mongodb: 
#     image: mongo:${MONGOVERSION}
#     container_name: ${PROJECTKEY}-${SYSENV}-mongodb
#     ports:
#       - 27017:27017
# #    volumes:
# #      - ./containers/${PROJECTKEY}-${SYSENV}-mongodb/data-db:/data/db
#     restart: 'on-failure:10'
#     network_mode: "bridge"

  postgresdb:
    image: postgres:${POSTGRESVERSION}
    container_name: ${PROJECTKEY}-${SYSENV}-postgresdb
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=${PROJECTKEY}-${SYSENV}
      - POSTGRES_USER=${PROJECTKEY}-${SYSENV}
    volumes:
      - ./containers/${PROJECTKEY}-${SYSENV}-postgresdb/var-lib-postgresql:/var/lib/postgresql
    restart: 'on-failure:10'
    network_mode: "bridge"

  apidocs:
    image: node:${NODEVERSION}
    container_name: ${PROJECTKEY}-${SYSENV}-apidocs
    expose:
      - 80
    volumes:
      - apidocs/src:/src
    env_file:
      - ./${SYSENV}.env
    command: /bin/bash /src/run
    restart: 'on-failure:1'
    network_mode: "bridge"

  web:
    image: nginx:${NGINXVERSION}
    container_name: ${PROJECTKEY}-${SYSENV}-web
    links: 
      - api:api
      - apidocs:apidocs
    depends_on:
      - api
      - apidocs
    ports: 
      - 80:80
      - 443:443
    volumes:
      - ./data/etc-nginx-conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - ./data/etc-nginx-conf.d/web-${SYSENV}-api.conf:/etc/nginx/conf.d/web-${SYSENV}-api.conf
      - ./data/etc-nginx-conf.d/web-${SYSENV}-apidocs.conf:/etc/nginx/conf.d/web-${SYSENV}-apidocs.conf
      - ./data/etc-nginx-conf.d/web-${SYSENV}-jsdocs.conf:/etc/nginx/conf.d/web-${SYSENV}-jsdocs.conf
      - ./docs:/src
      - ./data/etc-nginx-conf.d/.htpasswd:/etc/nginx/conf.d/.htpasswd
      - ./data/opt-ssl:/opt/ssl 
    environment:
      - DEBUG=${DEBUG}
    restart: 'on-failure:10'
    network_mode: "bridge"